0 PUSH_GLOBAL programName
1 LOAD_CONST "My Monkey App"
2 STORE_GLOBAL programName
3 DEF fibonacci
4 PUSH_LOCAL x
5 LOAD_FAST x
6 LOAD_CONST 0
7 COMPARE_OP ==
8 JUMP_IF_FALSE 12
9 LOAD_CONST 0
10 RETURN_VALUE
11 JUMP_ABSOLUTE 31
12 LOAD_FAST x
13 LOAD_CONST 1
14 COMPARE_OP ==
15 JUMP_IF_FALSE 19
16 LOAD_CONST 1
17 RETURN_VALUE
18 JUMP_ABSOLUTE 31
19 LOAD_FAST x
20 LOAD_CONST 1
21 BINARY_SUBSTRACT
22 LOAD_GLOBAL fibonacci
23 CALL_FUNCTION 1
24 LOAD_FAST x
25 LOAD_CONST 2
26 BINARY_SUBSTRACT
27 LOAD_GLOBAL fibonacci
28 CALL_FUNCTION 1
29 BINARY_ADD
30 RETURN_VALUE
31 RETURN
32 DEF map
33 PUSH_LOCAL n
34 LOAD_FAST n
35 LOAD_GLOBAL write
36 CALL_FUNCTION 1
37 LOAD_FAST n
38 LOAD_GLOBAL len
39 LOAD_CONST 1
40 COMPARE_OP ==
41 JUMP_IF_FALSE 46
42 LOAD_FAST n
43 LOAD_GLOBAL first
44 RETURN_VALUE
45 JUMP_ABSOLUTE 57
46 LOAD_CONST "=>"
47 LOAD_FAST n
48 LOAD_GLOBAL first
49 BINARY_ADD
50 LOAD_GLOBAL write
51 CALL_FUNCTION 1
52 LOAD_FAST n
53 LOAD_GLOBAL rest
54 LOAD_GLOBAL map
55 CALL_FUNCTION 1
56 RETURN_VALUE
57 RETURN
58 DEF fibonacci_Fast
59 PUSH_LOCAL number
60 LOAD_FAST number
61 LOAD_CONST 2
62 COMPARE_OP <
63 JUMP_IF_FALSE 67
64 LOAD_FAST number
65 RETURN_VALUE
66 JUMP_ABSOLUTE 79
67 LOAD_FAST number
68 LOAD_CONST 1
69 BINARY_SUBSTRACT
70 LOAD_GLOBAL fibonacci_Fast
71 CALL_FUNCTION 1
72 LOAD_FAST number
73 LOAD_CONST 2
74 BINARY_SUBSTRACT
75 LOAD_GLOBAL fibonacci_Fast
76 CALL_FUNCTION 1
77 BINARY_ADD
78 RETURN_VALUE
79 RETURN
80 DEF sum
81 PUSH_LOCAL a
82 PUSH_LOCAL b
83 PUSH_LOCAL c
84 LOAD_FAST a
85 LOAD_FAST b
86 LOAD_FAST c
87 LOAD_FAST c
88 LOAD_GLOBAL fibonacci_Fast
89 CALL_FUNCTION 1
90 BINARY_ADD
91 BINARY_ADD
92 BINARY_ADD
93 RETURN_VALUE
94 RETURN
95 DEF Main
96 LOAD_GLOBAL programName
97 STORE_GLOBAL programName
98 LOAD_CONST 2
99 LOAD_CONST 2
100 LOAD_CONST 9
101 LOAD_GLOBAL sum
102 CALL_FUNCTION 3
103 LOAD_GLOBAL write
104 CALL_FUNCTION 1
105 LOAD_CONST ""
106 LOAD_GLOBAL write
107 CALL_FUNCTION 1
108 LOAD_CONST "Print List"
109 LOAD_GLOBAL write
110 CALL_FUNCTION 1
111 PUSH_GLOBAL listaTest
112 LOAD_CONST 1
113 LOAD_CONST 2
114 LOAD_CONST 3
115 LOAD_CONST 4
116 LOAD_CONST 5
117 LOAD_CONST 6
118 LOAD_CONST 7
119 LOAD_CONST 8
120 LOAD_CONST 9
121 BUILD_LIST 9
122 STORE_GLOBAL listaTest
123 LOAD_GLOBAL listaTest
124 LOAD_GLOBAL write
125 CALL_FUNCTION 1
126 LOAD_CONST ""
127 LOAD_GLOBAL write
128 CALL_FUNCTION 1
129 LOAD_CONST "Print List Recursive"
130 LOAD_GLOBAL write
131 CALL_FUNCTION 1
132 LOAD_CONST "=>"
133 LOAD_GLOBAL listaTest
134 LOAD_GLOBAL map
135 CALL_FUNCTION 1
136 BINARY_ADD
137 LOAD_GLOBAL write
138 CALL_FUNCTION 1
139 LOAD_CONST ""
140 LOAD_GLOBAL write
141 CALL_FUNCTION 1
142 LOAD_CONST "Fibonacci Recursive with last of list"
143 LOAD_GLOBAL write
144 CALL_FUNCTION 1
145 PUSH_GLOBAL c
146 LOAD_GLOBAL listaTest
147 LOAD_GLOBAL last
148 STORE_GLOBAL c
149 LOAD_GLOBAL c
150 LOAD_GLOBAL write
151 CALL_FUNCTION 1
152 LOAD_CONST "=>"
153 LOAD_GLOBAL c
154 LOAD_GLOBAL fibonacci
155 CALL_FUNCTION 1
156 BINARY_ADD
157 LOAD_GLOBAL write
158 CALL_FUNCTION 1
159 LOAD_CONST ""
160 LOAD_GLOBAL write
161 CALL_FUNCTION 1
162 LOAD_CONST "Fibonacci Recursive fast, with last of list"
163 LOAD_GLOBAL write
164 CALL_FUNCTION 1
165 LOAD_CONST "=>"
166 LOAD_GLOBAL c
167 LOAD_GLOBAL fibonacci_Fast
168 CALL_FUNCTION 1
169 BINARY_ADD
170 LOAD_GLOBAL write
171 CALL_FUNCTION 1
172 PUSH_GLOBAL y
173 LOAD_CONST false
174 STORE_GLOBAL y
175 PUSH_GLOBAL y
176 LOAD_CONST true
177 STORE_GLOBAL y
178 PUSH_GLOBAL y
179 LOAD_CONST "String"
180 STORE_GLOBAL y
181 PUSH_GLOBAL y
182 LOAD_GLOBAL c
183 STORE_GLOBAL y
184 PUSH_GLOBAL y
185 LOAD_CONST 420
186 STORE_GLOBAL y
187 PUSH_GLOBAL a
188 LOAD_CONST 100
189 STORE_GLOBAL a
190 PUSH_GLOBAL b
191 LOAD_CONST 100
192 STORE_GLOBAL b
193 PUSH_GLOBAL test
194 LOAD_CONST 1
195 LOAD_CONST 12
196 BINARY_ADD
197 LOAD_CONST 3
198 BINARY_SUBSTRACT
199 LOAD_CONST 5
200 BINARY_DIVIDE
201 LOAD_CONST 2
202 BINARY_MULTIPLY
203 STORE_GLOBAL test
204 PUSH_GLOBAL x
205 LOAD_CONST 1
206 LOAD_CONST 418
207 LOAD_CONST 5
208 BINARY_ADD
209 BINARY_ADD
210 STORE_GLOBAL x
211 LOAD_CONST ""
212 LOAD_GLOBAL write
213 CALL_FUNCTION 1
214 LOAD_CONST "TEST: STRING + (EXPRESION)*"
215 LOAD_GLOBAL write
216 CALL_FUNCTION 1
217 LOAD_CONST "x = 1 + 418 + 5"
218 LOAD_GLOBAL write
219 CALL_FUNCTION 1
220 LOAD_CONST "test = (((1+12)-3)/5)*2"
221 LOAD_GLOBAL write
222 CALL_FUNCTION 1
223 LOAD_CONST "Result : + ( test + x ) ?"
224 LOAD_GLOBAL write
225 CALL_FUNCTION 1
226 LOAD_CONST "=>Result :"
227 LOAD_GLOBAL test
228 LOAD_GLOBAL x
229 BINARY_ADD
230 BINARY_ADD
231 LOAD_GLOBAL write
232 CALL_FUNCTION 1
233 LOAD_CONST ""
234 LOAD_GLOBAL write
235 CALL_FUNCTION 1
236 LOAD_CONST "TEST IF"
237 LOAD_GLOBAL write
238 CALL_FUNCTION 1
239 LOAD_GLOBAL test
240 LOAD_GLOBAL write
241 CALL_FUNCTION 1
242 LOAD_CONST "(Dos, Tres, Cuatro, Cinco) ?"
243 LOAD_GLOBAL write
244 CALL_FUNCTION 1
245 LOAD_GLOBAL test
246 LOAD_CONST 2
247 COMPARE_OP ==
248 JUMP_IF_FALSE 253
249 LOAD_CONST "=>Dos"
250 LOAD_GLOBAL write
251 CALL_FUNCTION 1
252 JUMP_ABSOLUTE 253
253 LOAD_GLOBAL test
254 LOAD_CONST 3
255 COMPARE_OP ==
256 JUMP_IF_FALSE 261
257 LOAD_CONST "=>Tres"
258 LOAD_GLOBAL write
259 CALL_FUNCTION 1
260 JUMP_ABSOLUTE 261
261 LOAD_GLOBAL test
262 LOAD_CONST 4
263 COMPARE_OP ==
264 JUMP_IF_FALSE 269
265 LOAD_CONST "=>Cuatro"
266 LOAD_GLOBAL write
267 CALL_FUNCTION 1
268 JUMP_ABSOLUTE 269
269 LOAD_GLOBAL test
270 LOAD_CONST 5
271 COMPARE_OP ==
272 JUMP_IF_FALSE 277
273 LOAD_CONST "=>Cinco"
274 LOAD_GLOBAL write
275 CALL_FUNCTION 1
276 JUMP_ABSOLUTE 277
277 LOAD_CONST ""
278 LOAD_GLOBAL write
279 CALL_FUNCTION 1
280 LOAD_CONST "TEST IF ELSE"
281 LOAD_GLOBAL write
282 CALL_FUNCTION 1
283 LOAD_GLOBAL x
284 LOAD_GLOBAL write
285 CALL_FUNCTION 1
286 LOAD_CONST "Menor?"
287 LOAD_GLOBAL write
288 CALL_FUNCTION 1
289 LOAD_GLOBAL y
290 LOAD_GLOBAL write
291 CALL_FUNCTION 1
292 LOAD_GLOBAL x
293 LOAD_GLOBAL y
294 COMPARE_OP <
295 JUMP_IF_FALSE 300
296 LOAD_CONST "=>Menor"
297 LOAD_GLOBAL write
298 CALL_FUNCTION 1
299 JUMP_ABSOLUTE 303
300 LOAD_CONST "=>Mayor"
301 LOAD_GLOBAL write
302 CALL_FUNCTION 1
303 LOAD_CONST ""
304 LOAD_GLOBAL write
305 CALL_FUNCTION 1
306 LOAD_GLOBAL a
307 LOAD_GLOBAL write
308 CALL_FUNCTION 1
309 LOAD_CONST "Menor?"
310 LOAD_GLOBAL write
311 CALL_FUNCTION 1
312 LOAD_GLOBAL y
313 LOAD_GLOBAL write
314 CALL_FUNCTION 1
315 LOAD_GLOBAL a
316 LOAD_GLOBAL y
317 COMPARE_OP <
318 JUMP_IF_FALSE 323
319 LOAD_CONST "=>Menor"
320 LOAD_GLOBAL write
321 CALL_FUNCTION 1
322 JUMP_ABSOLUTE 326
323 LOAD_CONST "=>Mayor"
324 LOAD_GLOBAL write
325 CALL_FUNCTION 1
326 LOAD_CONST ""
327 LOAD_GLOBAL write
328 CALL_FUNCTION 1
329 LOAD_GLOBAL x
330 LOAD_GLOBAL write
331 CALL_FUNCTION 1
332 LOAD_CONST "Mayor?"
333 LOAD_GLOBAL write
334 CALL_FUNCTION 1
335 LOAD_GLOBAL y
336 LOAD_GLOBAL write
337 CALL_FUNCTION 1
338 LOAD_GLOBAL x
339 LOAD_GLOBAL y
340 COMPARE_OP >
341 JUMP_IF_FALSE 346
342 LOAD_CONST "=>Menor"
343 LOAD_GLOBAL write
344 CALL_FUNCTION 1
345 JUMP_ABSOLUTE 349
346 LOAD_CONST "=>Mayor"
347 LOAD_GLOBAL write
348 CALL_FUNCTION 1
349 LOAD_CONST ""
350 LOAD_GLOBAL write
351 CALL_FUNCTION 1
352 LOAD_GLOBAL a
353 LOAD_GLOBAL write
354 CALL_FUNCTION 1
355 LOAD_CONST "Mayor?"
356 LOAD_GLOBAL write
357 CALL_FUNCTION 1
358 LOAD_GLOBAL y
359 LOAD_GLOBAL write
360 CALL_FUNCTION 1
361 LOAD_GLOBAL a
362 LOAD_GLOBAL y
363 COMPARE_OP >
364 JUMP_IF_FALSE 369
365 LOAD_CONST "=>Menor"
366 LOAD_GLOBAL write
367 CALL_FUNCTION 1
368 JUMP_ABSOLUTE 372
369 LOAD_CONST "=>Mayor"
370 LOAD_GLOBAL write
371 CALL_FUNCTION 1
372 LOAD_CONST ""
373 LOAD_GLOBAL write
374 CALL_FUNCTION 1
375 PUSH_GLOBAL z
376 LOAD_GLOBAL y
377 LOAD_CONST 5
378 BINARY_ADD
379 STORE_GLOBAL z
380 LOAD_GLOBAL x
381 LOAD_GLOBAL write
382 CALL_FUNCTION 1
383 LOAD_CONST "Igual?"
384 LOAD_GLOBAL write
385 CALL_FUNCTION 1
386 LOAD_GLOBAL z
387 LOAD_GLOBAL write
388 CALL_FUNCTION 1
389 LOAD_GLOBAL x
390 LOAD_GLOBAL z
391 COMPARE_OP ==
392 JUMP_IF_FALSE 397
393 LOAD_CONST "=>Igual"
394 LOAD_GLOBAL write
395 CALL_FUNCTION 1
396 JUMP_ABSOLUTE 400
397 LOAD_CONST "=>Diferente"
398 LOAD_GLOBAL write
399 CALL_FUNCTION 1
400 LOAD_CONST ""
401 LOAD_GLOBAL write
402 CALL_FUNCTION 1
403 LOAD_GLOBAL a
404 LOAD_GLOBAL write
405 CALL_FUNCTION 1
406 LOAD_CONST "Igual?"
407 LOAD_GLOBAL write
408 CALL_FUNCTION 1
409 LOAD_GLOBAL b
410 LOAD_GLOBAL write
411 CALL_FUNCTION 1
412 LOAD_GLOBAL a
413 LOAD_GLOBAL b
414 COMPARE_OP ==
415 JUMP_IF_FALSE 420
416 LOAD_CONST "=>Igual"
417 LOAD_GLOBAL write
418 CALL_FUNCTION 1
419 JUMP_ABSOLUTE 423
420 LOAD_CONST "=>Diferente"
421 LOAD_GLOBAL write
422 CALL_FUNCTION 1
423 LOAD_CONST ""
424 LOAD_GLOBAL write
425 CALL_FUNCTION 1
426 LOAD_GLOBAL x
427 LOAD_GLOBAL write
428 CALL_FUNCTION 1
429 LOAD_CONST "Diferente?"
430 LOAD_GLOBAL write
431 CALL_FUNCTION 1
432 LOAD_GLOBAL z
433 LOAD_GLOBAL write
434 CALL_FUNCTION 1
435 LOAD_GLOBAL x
436 LOAD_GLOBAL z
437 COMPARE_OP ==
438 JUMP_IF_FALSE 443
439 LOAD_CONST "=>Igual"
440 LOAD_GLOBAL write
441 CALL_FUNCTION 1
442 JUMP_ABSOLUTE 446
443 LOAD_CONST "=>Diferente"
444 LOAD_GLOBAL write
445 CALL_FUNCTION 1
446 LOAD_CONST ""
447 LOAD_GLOBAL write
448 CALL_FUNCTION 1
449 LOAD_GLOBAL a
450 LOAD_GLOBAL write
451 CALL_FUNCTION 1
452 LOAD_CONST "Diferente?"
453 LOAD_GLOBAL write
454 CALL_FUNCTION 1
455 LOAD_GLOBAL b
456 LOAD_GLOBAL write
457 CALL_FUNCTION 1
458 LOAD_GLOBAL a
459 LOAD_GLOBAL b
460 COMPARE_OP ==
461 JUMP_IF_FALSE 466
462 LOAD_CONST "=>Igual"
463 LOAD_GLOBAL write
464 CALL_FUNCTION 1
465 JUMP_ABSOLUTE 469
466 LOAD_CONST "=>Diferente"
467 LOAD_GLOBAL write
468 CALL_FUNCTION 1
469 LOAD_CONST ""
470 LOAD_GLOBAL write
471 CALL_FUNCTION 1
472 LOAD_GLOBAL x
473 LOAD_GLOBAL write
474 CALL_FUNCTION 1
475 LOAD_CONST "Menor_o_igual?"
476 LOAD_GLOBAL write
477 CALL_FUNCTION 1
478 LOAD_GLOBAL z
479 LOAD_GLOBAL write
480 CALL_FUNCTION 1
481 LOAD_GLOBAL x
482 LOAD_GLOBAL z
483 COMPARE_OP <=
484 JUMP_IF_FALSE 489
485 LOAD_CONST "=>Menor o igual"
486 LOAD_GLOBAL write
487 CALL_FUNCTION 1
488 JUMP_ABSOLUTE 492
489 LOAD_CONST "=>Mayor"
490 LOAD_GLOBAL write
491 CALL_FUNCTION 1
492 LOAD_CONST ""
493 LOAD_GLOBAL write
494 CALL_FUNCTION 1
495 LOAD_GLOBAL z
496 LOAD_GLOBAL write
497 CALL_FUNCTION 1
498 LOAD_CONST "Menor o igual?"
499 LOAD_GLOBAL write
500 CALL_FUNCTION 1
501 LOAD_GLOBAL a
502 LOAD_GLOBAL write
503 CALL_FUNCTION 1
504 LOAD_GLOBAL z
505 LOAD_GLOBAL a
506 COMPARE_OP <=
507 JUMP_IF_FALSE 512
508 LOAD_CONST "=>Menor o igual"
509 LOAD_GLOBAL write
510 CALL_FUNCTION 1
511 JUMP_ABSOLUTE 515
512 LOAD_CONST "=>Mayor"
513 LOAD_GLOBAL write
514 CALL_FUNCTION 1
515 LOAD_CONST ""
516 LOAD_GLOBAL write
517 CALL_FUNCTION 1
518 LOAD_GLOBAL x
519 LOAD_GLOBAL write
520 CALL_FUNCTION 1
521 LOAD_CONST "Mayor o igual?"
522 LOAD_GLOBAL write
523 CALL_FUNCTION 1
524 LOAD_GLOBAL z
525 LOAD_GLOBAL write
526 CALL_FUNCTION 1
527 LOAD_GLOBAL x
528 LOAD_GLOBAL z
529 COMPARE_OP >=
530 JUMP_IF_FALSE 535
531 LOAD_CONST "=>Mayor o igual"
532 LOAD_GLOBAL write
533 CALL_FUNCTION 1
534 JUMP_ABSOLUTE 538
535 LOAD_CONST "=>Menor"
536 LOAD_GLOBAL write
537 CALL_FUNCTION 1
538 LOAD_CONST ""
539 LOAD_GLOBAL write
540 CALL_FUNCTION 1
541 LOAD_GLOBAL b
542 LOAD_GLOBAL write
543 CALL_FUNCTION 1
544 LOAD_CONST "Mayor o igual?"
545 LOAD_GLOBAL write
546 CALL_FUNCTION 1
547 LOAD_GLOBAL a
548 LOAD_GLOBAL write
549 CALL_FUNCTION 1
550 LOAD_GLOBAL b
551 LOAD_GLOBAL a
552 COMPARE_OP >=
553 JUMP_IF_FALSE 558
554 LOAD_CONST "=>Mayor o igual"
555 LOAD_GLOBAL write
556 CALL_FUNCTION 1
557 JUMP_ABSOLUTE 561
558 LOAD_CONST "=>Menor"
559 LOAD_GLOBAL write
560 CALL_FUNCTION 1
561 LOAD_CONST ""
562 LOAD_GLOBAL write
563 CALL_FUNCTION 1
564 LOAD_CONST "HASH"
565 LOAD_GLOBAL write
566 CALL_FUNCTION 1
567 PUSH_GLOBAL dic
568 LOAD_CONST 1
569 LOAD_CONST 5
570 BINARY_ADD
571 LOAD_CONST 24
572 LOAD_CONST "age"
573 LOAD_CONST 24
574 BUILD_CONST_KEY_MAP 2
575 STORE_GLOBAL dic
576 PUSH_GLOBAL dic2
577 LOAD_CONST "Hello"
578 LOAD_CONST 24
579 LOAD_CONST "age"
580 LOAD_CONST 24
581 BUILD_CONST_KEY_MAP 2
582 STORE_GLOBAL dic2
583 PUSH_GLOBAL dic3
584 LOAD_CONST "hola"
585 LOAD_CONST 24
586 LOAD_CONST "age"
587 LOAD_CONST 24
588 BUILD_CONST_KEY_MAP 2
589 STORE_GLOBAL dic3
590 PUSH_GLOBAL dic4
591 LOAD_CONST 1
592 LOAD_CONST 24
593 LOAD_CONST "age"
594 LOAD_CONST 24
595 BUILD_CONST_KEY_MAP 2
596 STORE_GLOBAL dic4
597 LOAD_GLOBAL dic
598 LOAD_GLOBAL write
599 CALL_FUNCTION 1
600 LOAD_GLOBAL dic2
601 LOAD_GLOBAL write
602 CALL_FUNCTION 1
603 LOAD_GLOBAL dic3
604 LOAD_GLOBAL write
605 CALL_FUNCTION 1
606 LOAD_GLOBAL dic4
607 LOAD_GLOBAL write
608 CALL_FUNCTION 1
609 LOAD_CONST ""
610 LOAD_GLOBAL write
611 CALL_FUNCTION 1
612 LOAD_CONST "EXPRESIONS"
613 LOAD_GLOBAL write
614 CALL_FUNCTION 1
615 LOAD_CONST 1
616 LOAD_CONST 12
617 BINARY_ADD
618 LOAD_CONST 3
619 BINARY_SUBSTRACT
620 LOAD_CONST 5
621 BINARY_DIVIDE
622 LOAD_CONST 2
623 BINARY_MULTIPLY
624 LOAD_GLOBAL write
625 CALL_FUNCTION 1
626 LOAD_CONST ""
627 LOAD_GLOBAL write
628 CALL_FUNCTION 1
629 LOAD_CONST "STRING"
630 LOAD_GLOBAL write
631 CALL_FUNCTION 1
632 LOAD_CONST "Hello, i'm String"
633 LOAD_GLOBAL write
634 CALL_FUNCTION 1
635 LOAD_CONST ""
636 LOAD_GLOBAL write
637 CALL_FUNCTION 1
638 LOAD_CONST "BOOLEAN"
639 LOAD_GLOBAL write
640 CALL_FUNCTION 1
641 LOAD_CONST true
642 LOAD_GLOBAL write
643 CALL_FUNCTION 1
644 LOAD_CONST false
645 LOAD_GLOBAL write
646 CALL_FUNCTION 1
647 LOAD_CONST ""
648 LOAD_GLOBAL write
649 CALL_FUNCTION 1
650 LOAD_CONST "LIST"
651 LOAD_GLOBAL write
652 CALL_FUNCTION 1
653 PUSH_GLOBAL lista
654 LOAD_CONST "Hola"
655 LOAD_CONST 1
656 LOAD_CONST 2
657 LOAD_CONST 3
658 LOAD_CONST 4
659 LOAD_CONST 5
660 BUILD_LIST 6
661 STORE_GLOBAL lista
662 PUSH_GLOBAL lista2
663 LOAD_CONST 1
664 LOAD_CONST 2
665 LOAD_CONST 3
666 BUILD_LIST 3
667 STORE_GLOBAL lista2
668 LOAD_GLOBAL lista
669 LOAD_GLOBAL write
670 CALL_FUNCTION 1
671 LOAD_GLOBAL lista2
672 LOAD_GLOBAL write
673 CALL_FUNCTION 1
674 LOAD_CONST ""
675 LOAD_GLOBAL write
676 CALL_FUNCTION 1
677 LOAD_CONST "LEN"
678 LOAD_GLOBAL write
679 CALL_FUNCTION 1
680 LOAD_GLOBAL lista
681 LOAD_GLOBAL len
682 LOAD_GLOBAL write
683 CALL_FUNCTION 1
684 LOAD_GLOBAL lista2
685 LOAD_GLOBAL len
686 LOAD_GLOBAL write
687 CALL_FUNCTION 1
688 LOAD_CONST ""
689 LOAD_GLOBAL write
690 CALL_FUNCTION 1
691 LOAD_CONST "PUSH"
692 LOAD_GLOBAL write
693 CALL_FUNCTION 1
694 LOAD_GLOBAL lista
695 LOAD_CONST 420
696 LOAD_GLOBAL push
697 LOAD_GLOBAL lista2
698 LOAD_CONST 421
699 LOAD_GLOBAL push
700 LOAD_GLOBAL lista
701 LOAD_GLOBAL write
702 CALL_FUNCTION 1
703 LOAD_GLOBAL lista2
704 LOAD_GLOBAL write
705 CALL_FUNCTION 1
706 LOAD_CONST ""
707 LOAD_GLOBAL write
708 CALL_FUNCTION 1
709 LOAD_CONST "LEN"
710 LOAD_GLOBAL write
711 CALL_FUNCTION 1
712 LOAD_GLOBAL lista
713 LOAD_GLOBAL len
714 LOAD_GLOBAL write
715 CALL_FUNCTION 1
716 LOAD_GLOBAL lista2
717 LOAD_GLOBAL len
718 LOAD_GLOBAL write
719 CALL_FUNCTION 1
720 LOAD_CONST ""
721 LOAD_GLOBAL write
722 CALL_FUNCTION 1
723 LOAD_CONST "FIRST"
724 LOAD_GLOBAL write
725 CALL_FUNCTION 1
726 LOAD_GLOBAL lista
727 LOAD_GLOBAL first
728 LOAD_GLOBAL write
729 CALL_FUNCTION 1
730 LOAD_GLOBAL lista2
731 LOAD_GLOBAL first
732 LOAD_GLOBAL write
733 CALL_FUNCTION 1
734 LOAD_CONST ""
735 LOAD_GLOBAL write
736 CALL_FUNCTION 1
737 LOAD_CONST "LAST"
738 LOAD_GLOBAL write
739 CALL_FUNCTION 1
740 LOAD_GLOBAL lista
741 LOAD_GLOBAL last
742 LOAD_GLOBAL write
743 CALL_FUNCTION 1
744 LOAD_GLOBAL lista2
745 LOAD_GLOBAL last
746 LOAD_GLOBAL write
747 CALL_FUNCTION 1
748 LOAD_CONST ""
749 LOAD_GLOBAL write
750 CALL_FUNCTION 1
751 LOAD_CONST "REST"
752 LOAD_GLOBAL write
753 CALL_FUNCTION 1
754 LOAD_GLOBAL lista
755 LOAD_GLOBAL rest
756 LOAD_GLOBAL lista2
757 LOAD_GLOBAL rest
758 LOAD_GLOBAL lista
759 LOAD_GLOBAL write
760 CALL_FUNCTION 1
761 LOAD_GLOBAL lista2
762 LOAD_GLOBAL write
763 CALL_FUNCTION 1
764 LOAD_CONST ""
765 LOAD_GLOBAL write
766 CALL_FUNCTION 1
767 LOAD_CONST "FIRST"
768 LOAD_GLOBAL write
769 CALL_FUNCTION 1
770 LOAD_GLOBAL lista
771 LOAD_GLOBAL first
772 LOAD_GLOBAL write
773 CALL_FUNCTION 1
774 LOAD_GLOBAL lista2
775 LOAD_GLOBAL first
776 LOAD_GLOBAL write
777 CALL_FUNCTION 1
778 LOAD_CONST ""
779 LOAD_GLOBAL write
780 CALL_FUNCTION 1
781 LOAD_CONST "LAST"
782 LOAD_GLOBAL write
783 CALL_FUNCTION 1
784 LOAD_GLOBAL lista
785 LOAD_GLOBAL last
786 LOAD_GLOBAL write
787 CALL_FUNCTION 1
788 LOAD_GLOBAL lista2
789 LOAD_GLOBAL last
790 LOAD_GLOBAL write
791 CALL_FUNCTION 1
792 END
