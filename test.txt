let programName = "My Monkey App";

// fibonacci
let fibonacci = fn(x) {
	if (x == 0) {
	    	return 0;
	} else {
	 	if (x == 1) {
	     	return 1;
	    	} else {
	    		return (fibonacci(x-1) + fibonacci(x-2));
	    }
	}
};


// map list to print data recursive
let map = fn(n){
	puts(n);
    	if (len(n) == 1){
        	return first(n);
	}else{
		puts("=>"+first(n));
        	return map(rest(n));
    }
};

// fibonacci
let fibonacci_Fast = fn(number) {
	if (number < 2) {
	    	return number;
	} else {
	 	return (fibonacci_Fast(number-1) + fibonacci_Fast(number-2));
	}
};


let sum = fn(a,b, c){
	return (a + b + c + fibonacci_Fast(c));	//47
};

//Main App
let main = fn(programName){




	//puts(sum(2,2,9));
	let lista = ["uno ","dos","tres",4,5];
	puts(lista[2]);

	let dic = {1+5: 24, "age": 300};
	puts(dic["age"]);


	puts(lista);



	puts("");
	puts("Print List");
	let listaTest = [1,2,3,4,5,6,7,8,9];
	puts(listaTest);

	//recursive methods
	puts("");
	puts("Print List Recursive");
	puts("=>"+map(listaTest));

	//test call expre
	puts("");
	puts("Fibonacci Recursive with last of list");
	let c = last(listaTest);
	puts(c);
	puts("=>"+fibonacci(c));


	puts("");
	puts("Fibonacci Recursive fast, with last of list");
	puts("=>"+fibonacci_Fast(c));


	//test expresions asignament
	let y = false;
	let y = true;
	let y = "String";
	let y = c;
	let y = 420;
	let a = 100;
	let b = 100;


	//test more dificult's expressions
	let test = (((1+12)-3)/5)*2; //4
	let x = 1+418+5;


	//test expresions like String + (test + x)
	puts("");
	puts("TEST: STRING + (EXPRESION)*");
	puts("x = 1 + 418 + 5");
	puts("test = (((1+12)-3)/5)*2");
	puts("Result : + ( test + x ) ?");
	puts("=>Result :"+(test+x));


	// test if
	puts("");
	puts("TEST IF");
	puts(test);
	puts("(Dos, Tres, Cuatro, Cinco) ?");

	if(test == 2){
		puts("=>Dos");
	}

	if(test == 3){
		puts("=>Tres");
	}

	if(test == 4){
		puts("=>Cuatro");
	}

	if(test == 5){
		puts("=>Cinco");
	}


	// Testing if with else
	// <
	puts("");
	puts("TEST IF ELSE");
	puts(x);
	puts("Menor?");
	puts(y);

	if(x < y){
		puts("=>Menor");
	}else{
		puts("=>Mayor");
	}

	puts("");
	puts(a);
	puts("Menor?");
	puts(y);

	if(a < y){
		puts("=>Menor");
	}else{
		puts("=>Mayor");
	}


	// >
	puts("");
	puts(x);
	puts("Mayor?");
	puts(y);
	if(x > y){
		puts("=>Mayor");
	}else{
		puts("=>Menor");
	}

	puts("");
	puts(a);
	puts("Mayor?");
	puts(y);

	if(a > y){
		puts("=>Mayor");
	}else{
		puts("=>Menor");
	}


	// !=
	puts("");
	let z = y+5;
	puts(x);
	puts("Diferente?");
	puts(z);

	if(x != z){
		puts("=>Diferente");
	}else{
		puts("=>Igual");
	}

	puts("");
	puts(a);
	puts("Diferente?");
	puts(b);

	if(a != b){
		puts("=>Diferente");
	}else{
		puts("=>Igual");
	}


	// ==
	puts("");
	puts(x);
	puts("Igual?");
	puts(z);

	if(x == z){
		puts("=>Igual");
	}else{
		puts("=>Diferente");
	}

	puts("");
	puts(a);
	puts("Igual?");
	puts(b);

	if(a == b){
		puts("=>Igual");
	}else{
		puts("=>Diferente");
	}


	// <=
	puts("");
	puts(x);
	puts("Menor o igual?");
	puts(z);

	if(x <= z){
		puts("=>Menor o igual");
	}else{
		puts("=>Mayor");
	}

	puts("");
	puts(z);
	puts("Menor o igual?");
	puts(a);

	if(z <= a){
		puts("=>Menor o igual");
	}else{
		puts("=>Mayor");
	}


	// >=
	puts("");
	puts(x);
	puts("Mayor o igual?");
	puts(z);

	if(x >= z){
		puts("=>Mayor o igual");
	}else{
		puts("=>Menor");
	}

	puts("");
	puts(b);
	puts("Mayor o igual?");
	puts(a);

	if(b >= a){
		puts("=>Mayor o igual");
	}else{
		puts("=>Menor");
	}



	//test HASH
	puts("");
	puts("HASH");
	let dic = {1+5: 24, "age": 24};
	let dic2 = {"Hello": 24, "age": 24};
	let dic3 = {"hola": 24, "age": 24};
	let dic4 = {1: 24, "age": 24};
	puts(dic);
	puts(dic2);
	puts(dic3);
	puts(dic4);


	//test expresions impresions
	puts("");
	puts("EXPRESIONS");
	puts((((1+12)-3)/5)*2);


	//test String impresions
	puts("");
	puts("STRING");
	puts("Hello, i'm String");

	//test bool impresions
	puts("");
	puts("BOOLEAN");
	puts(true);
	puts(false);


	//test lists
	puts("");
	puts("LIST");
	let lista = ["Hola",1,2,3,4,5];
	let lista2 = [1,2,3];

	puts(lista);
	puts(lista2);

	// test len funct
	puts("");
	puts("LEN");
	puts(len(lista));
	puts(len(lista2));

	//test push(lista, INPUT_DATA)
	puts("");
	puts("PUSH");
	push(lista, 420);
	push(lista2, 421);

	puts(lista);
	puts(lista2);

	// test len funct
	puts("");
	puts("LEN");
	puts(len(lista));
	puts(len(lista2));

	// test first funct
	puts("");
	puts("FIRST");
	puts(first(lista));
	puts(first(lista2));

	// test last funct
	puts("");
	puts("LAST");
	puts(last(lista));
	puts(last(lista2));

	// test last funct
	puts("");
	puts("REST");
	rest(lista);
	rest(lista2);

	puts(lista);
	puts(lista2);


	// test first funct
	puts("");
	puts("FIRST");
	puts(first(lista));
	puts(first(lista2));

	// test last funct
	puts("");
	puts("LAST");
	puts(last(lista));
	puts(last(lista2));

};
